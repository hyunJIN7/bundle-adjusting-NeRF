_parent_: options/nerf_blender.yaml

barf_c2f:                                                   # coarse-to-fine scheduling on positional encoding

camera:                                                     # camera options
    noise: 0.0                                              # synthetic perturbations on the camera poses (Blender only)


data:                                                       # data options
    dataset: strayscanner                                   # dataset name
    scene: IMG_0239                                         # scene name
    image_size: [192,256]                                   # input image sizes [height,width]

optim:                                                      # optimization options
    lr_pose: 1.e-3                                          # learning rate of camera poses
    lr_pose_end: 1.e-5                                      # terminal learning rate of camera poses (only used with sched_pose.type=ExponentialLR)
    sched_pose:                                             # learning rate scheduling options
        type: ExponentialLR                                 # scheduler (see PyTorch doc)
        gamma:                                              # decay rate (can be empty if lr_pose_end were specified)
    warmup_pose:                                            # linear warmup of the pose learning rate (N iterations)
    test_photo: true                                        # test-time photometric optimization for evaluation
    test_iter: 100                                          # number of iterations for test-time optimization

visdom:                                                     # Visdom options
    cam_depth: 0.5                                          # size of visualized cameras
dpeth :
    depth_loss_weight : 0.04                                # 'weight of the depth loss, values <=0 do not apply depth loss'
    invalidate_large_std_threshold : 1.                     # 'invalidate completed depth values with standard deviation greater than threshold in m, thresholds <=0 deactivate invalidation'
    use_depth: true

